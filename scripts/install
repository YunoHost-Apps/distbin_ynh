#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	ynh_clean_check_starting
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC

app=$YNH_APP_INSTANCE_NAME

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================
ynh_print_info --message="Validating installation parameters..."

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_print_info --message="Storing installation settings..."

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=is_public --value=$is_public

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
ynh_print_info --message="Configuring firewall ..."

# Find a free port
port=$(ynh_find_port 8095)
ynh_app_setting_set --app=$app --key=port --value=$port

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_print_info --message="Installing dependencies ..."

ynh_install_app_dependencies $pkg_dependencies
ynh_install_nodejs 10

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_print_info --message="Setting up source files ..."

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
ynh_setup_source --dest_dir="$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_print_info --message="Configuring nginx web server..."

# Create a dedicated nginx config
ynh_add_nginx_config

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_print_info --message="Configuring system user ..."

# Create a system user
ynh_system_user_create "$app" "$final_path"

#=================================================
# SPECIFIC SETUP
#=================================================
# CREATE LOG FOLDER
#=================================================

mkdir -p "/var/log/$app"
chown -R "$app":"$app" "/var/log/$app"

#=================================================
# CREATE DB FOLDER
#=================================================

mkdir -p "$final_path/distbin-db"
mkdir -p "$final_path/distbin-db/activities"
mkdir -p "$final_path/distbin-db/inbox"

#=================================================
# MAKE SETUP
#=================================================

chown -R "$app":"$app" "$final_path"
pushd $final_path
    ynh_use_nodejs
    sudo -u $app env PATH=$PATH npm install --ignore-scripts
    sudo -u $app env PATH=$PATH npm run build
	cp package* dist/ 
popd

pushd $final_path/dist
    sudo -u $app env PATH=$PATH npm install --ignore-scripts  --production
popd


#=================================================
# SETUP SYSTEMD
#=================================================
ynh_print_info --message="Configuring a systemd service ..."

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# MODIFY A CONFIG FILE
#=================================================

cp "../conf/.env" "$final_path/.env"

if [ "$path_url" == "/" ]
then
    domain_uri="$domain"
else
    domain_uri="$domain$path_url"
fi

ynh_replace_string --match_string="__NODEJS_PATH__" --replace_string="$nodejs_path" --target_file="$final_path/.env"
ynh_replace_string --match_string="__PORT__" --replace_string="$port" --target_file="$final_path/.env"
ynh_replace_string --match_string="__DOMAIN_URI__" --replace_string="$domain_uri" --target_file="$final_path/.env"
ynh_replace_string --match_string="__FINALPATH__" --replace_string="$final_path" --target_file="$final_path/.env"

#=================================================
# STORE THE CONFIG FILE CHECKSUM
#=================================================

# Calculate and store the config file checksum into the app settings
ynh_store_file_checksum --file="$final_path/.env"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SECURE FILES AND DIRECTORIES
#=================================================

# Set permissions to app files
chown -R "$app":"$app" "$final_path"

#=================================================
# SETUP LOGROTATE
#=================================================
ynh_print_info --message="Configuring log rotation ..."

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# ADVERTISE SERVICE IN ADMIN PANEL
#=================================================

#yunohost service add $app --log "/var/log/$app/$app.log"
# if using yunohost version 3.2 or more in the 'manifest.json', a description can be added
yunohost service add $app --description "$app daemon for distbin" --log "/var/log/$app/$app.log"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_print_info --message="Configuring SSOwat ..."

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# unprotected_uris allows SSO credentials to be passed anyway.
	ynh_app_setting_set --app=$app --key=unprotected_uris --value="/"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_print_info --message="Reloading nginx web server..."

systemctl reload nginx

#=================================================
# START SERVICE
#=================================================

ynh_systemd_action --action=start --service_name=$app --log_path=systemd --line_match="Started Distbin Service"
sleep 10

#=================================================
# END OF SCRIPT
#=================================================

ynh_print_info --message="Installation of $app completed"
